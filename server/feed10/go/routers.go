/*
 * News Feed
 *
 * news feed api
 *
 * API version: 1.0.0
 * Contact: media@glennengstrand.info
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package newsfeedserver

import (
	"database/sql"
	"sync"

	"github.com/go-redis/redis"
	"github.com/gocql/gocql"
	"github.com/gorilla/mux"
)

// basicRoute contains all the properties
// all routes have in common.
// Basically, the only difference between the
// routes is that each of them requires a different
// set of datasources to be handed to them.
// Please see the individual *routes.go files for details.
type basicRoute struct {
	Name    string
	Method  string
	Pattern string
}

// NewRouter sets up all routes for the API.
func NewRouter(db *sql.DB, cache *redis.Client, cassandra *gocql.Session, espool *sync.Pool) *mux.Router {
	setupStatements(db)
	router := mux.NewRouter().StrictSlash(true)

	// Simple routes do not require any data source.
	simpleRoutesList.setup(router)

	// sqlroutes require a connection to MySQL
	sqlroutesList.setup(router, db)

	// cachedSQLroutes require a connection to both the cache
	// and MySQL
	cachedSQLRoutesList.setup(router, db, cache)

	// Routes accessing Cassandra
	cqlRoutesList.setup(router, cassandra)

	// Routes accessing Cassandra, redis and MySQL
	cqlCachedSQLRoutesList.setup(router, cassandra, db, cache)

	// Routes only accessing Elasticsearch
	esRoutesList.setup(router, espool)
	return router
}
