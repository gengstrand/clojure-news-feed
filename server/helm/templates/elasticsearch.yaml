apiVersion: v1
kind: Service
metadata:
  labels:
    name: elasticsearch
  name: elasticsearch
spec:
  {{- if .Values.useIngress }}
  type: NodePort
  {{- else }}
  type: LoadBalancer
  {{- end }}
  ports:
  - name: "9200"
    port: 9200
    targetPort: 9200
  selector:
    name: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      name: elasticsearch
  template:
    metadata:
      labels:
        name: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        ports:
        - containerPort: 9200
          hostIP: 127.0.0.1
      {{- if hasPrefix "8." .Values.elasticSearchVersion }}
        image: "docker.elastic.co/elasticsearch/elasticsearch:{{ .Values.elasticSearchVersion }}"
        resources:
          limits:
            memory: 1Gi
        env:
        - name: "ES_SETTING_NODE_STORE_ALLOW__MMAP"
          value: "false"
        - name: "ES_SETTING_XPACK_SECURITY_ENABLED"
          value: "false"
        - name: "ES_SETTING_DISCOVERY_TYPE"
          value: "single-node"
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - |
                  S=$(curl http://localhost:9200/_cat/health | grep green | wc -l)
                  until [ $S -eq 1 ]
                  do
                    sleep 20
                    S=$(curl http://localhost:9200/_cat/health | grep green | wc -l)
                  done
                  curl -X PUT http://localhost:9200/feed -H 'Content-Type: application/json' -d '{
                      "settings" : {
                         "number_of_shards" : 1
                       },
                         "mappings" : {
                             "properties" : {
                               "id" : { "type" : "keyword", "index" : false },
                               "sender" : { "type" : "keyword", "index" : false },
                               "story" : { "type" : "text", "index" : true }
                              }
                            }
                       }'
      {{- else }}
        image: "elasticsearch:{{ .Values.elasticSearchVersion }}"
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - |
                  S=$(curl http://localhost:9200/_cat/health | grep green | wc -l)
                  until [ $S -eq 1 ]
                  do
                    sleep 20
                    S=$(curl http://localhost:9200/_cat/health | grep green | wc -l)
                  done
                  curl -XPOST http://localhost:9200/feed -d '{
                      "settings" : {
                         "number_of_shards" : 1
                       },
                         "mappings" : {
                           "stories" : {
                             "properties" : {
                               "id" : { "type" : "string", "index" : "not_analyzed" },
                               "sender" : { "type" : "string", "index" : "not_analyzed" },
                               "story" : { "type" : "string"}
                              }
                            }
                          }
                       }'
      {{- end }}
      restartPolicy: Always
